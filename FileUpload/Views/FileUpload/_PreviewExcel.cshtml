@model FileUpload.Models.DataTransferModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<style>

    .div-table-data {
        width: 11rem;
    }

    .radio-input input {
        display: none;
    }

    .div-table-data {
        width: 9rem;
    }

    .radio-input {
        display: flex;
        flex-direction: column;
        width: 2rem;
    }

        .radio-input label {
            text-align: center;
        }



        /* When the radio input is checked */
        .radio-input input:checked + label:nth-child(1) {
            color: #fff;
            background-color: rgb(255, 4, 4); /* Red color for the first label */
        }

        .radio-input input:checked + label:nth-child(2) {
            color: #fff;
            background-color: rgb(0, 172, 29); /* Green color for the second label */
        }



        /* When the radio input is disabled, prevent interaction */
        .radio-input input:disabled + label {
            cursor: not-allowed;
            opacity: 0.6; /* Dimmed label when input is disabled */
        }

        /* When the radio input is checked and disabled, retain the background color */
        .radio-input input:disabled:checked + label:nth-child(1) {
            background-color: rgba(255, 4, 4, 0.6); /* Lightened red when disabled and checked */
            color: #fff;
        }

        .radio-input input:disabled:checked + label:nth-child(2) {
            background-color: rgba(0, 172, 29, 0.6); /* Lightened green when disabled and checked */
            color: #fff;
        }

        /* Ensure the selection is visible and remains after disabling */
        .radio-input input:disabled:checked + label:nth-child(1) ~ .selection {
            background-color: rgba(255, 4, 4, 0.6);
            display: inline-block;
        }

        .radio-input input:disabled:checked + label:nth-child(2) ~ .selection {
            background-color: rgba(0, 172, 29, 0.6);
            display: inline-block;
        }

</style>

@if (Model.ExcelValue != null && Model.ExcelValue.Count > 0)
{
    if (Model.DirectionValue != null)
    {
        <div>
            <strong>@Model.DirectionValue : @Model.SortedColumnName</strong>
        </div>
    }
    <div class="detail-table">
        <div class="table-div-main table">
            <div class="table-div-head">
                <div class="div-table-row">
                    @if (Model.ExcelValue != null && Model.ExcelValue.Count > 0)
                    {
                        foreach (var column in Model.ExcelValue[0].Keys)
                        {
                            <div class="div-table-data div-head table-dark" style="padding: 5px; text-align: left;">
                                <div class="data-div">
                                    @column
                                </div>

                                <div class="radio-input">
                                    <label>
                                        <input onclick="sortExcel(this,'@column','asc')" type="radio" id="value-1" name="value-radio" value="1" />
                                        <span>▲</span>
                                    </label>
                                    <label>
                                        <input onclick="sortExcel(this,'@column','desc')" type="radio" id="value-2" name="value-radio" value="2" />
                                        <span>▼</span>
                                    </label>

                                </div>

                            </div>
                        }
                    }
                </div>
            </div>
            <div class="table-div-body">
                @if (Model.ExcelValue != null && Model.ExcelValue.Count > 0)
                {
                    foreach (var row in Model.ExcelValue)
                    {
                        <div class="div-table-row">
                            @foreach (var cell in row.Values)
                            {
                                <div class="div-table-data" id="editDiv" style="padding: 8px;" contenteditable="false">@cell</div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="div-table-row">
                        <div colspan="100" style="text-align: center;">No data available</div>
                    </div>
                }
            </div>
        </div>
    </div>
}
@if (@Model.ErrorMsg != null)
{

    <div class="alert alert-danger">
        @Model.ErrorMsg
    </div>
}