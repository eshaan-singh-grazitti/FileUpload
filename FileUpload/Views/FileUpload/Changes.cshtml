@model FileUpload.Models.ExcelChangesViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

<style>
    .table-main-div {
        max-width: 80vw;
        max-height: 80vh;
        overflow: auto;
        border: 2px solid black;
    }

    .header-div {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>


<div class="header-div mb-2">
    <h1>
        Changes
    </h1>

    <a asp-action="AdminDashboard" asp-controller="Secure" class="btn btn-primary mt-2">Admin Dashboard</a>
</div>


<div class="table-main-div">

    @if (Model.ExcelData != null && Model.ExcelData.Count > 0)
    {
        <table class="detail-table table table-bordered table-striped table-hover">
            <thead>
                <tr>
                    @foreach (var column in Model.ExcelData[0].Keys)
                    {
                        <th style="padding: 5px; text-align: left;">
                            @column
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Model.ExcelData.Select((value, index) => new { RowData = value, RowIndex = index })) // Get row index (0-based)
                {


                    <tr>
                        @foreach (var cell in row.RowData.Values.Select((value, index) => new { CellValue = value, ColumnIndex = index })) // Get column index (0-based)
                        {
                            // Check if both row and column are present in Model.row and Model.column
                            bool isColChanged = Model.column.Contains(cell.ColumnIndex);  // 1-based row index
                            bool isRowChanged = Model.row.Contains(row.RowIndex);


                            if (isRowChanged)
                            {
                                if (isColChanged && isRowChanged)
                                {
                                    <td style="padding: 8px; background-color: yellow; min-width:1rem; border:2px solid black;">
                                        @cell.CellValue
                                    </td>
                                    Model.row.Remove(row.RowIndex);
                                    Model.column.Remove(cell.ColumnIndex);
                                }
                                else
                                {

                                    <td style="padding: 8px; min-width:9rem;">
                                        @cell.CellValue
                                    </td>
                                }
                            }
                            else
                            {

                                <td style="padding: 8px; min-width:9rem;">
                                    @cell.CellValue
                                </td>
                            }

                        }
                    </tr>

                }

            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info m-0">
            No data available
        </div>
    }

</div>

