@model FileUpload.Models.ExcelChangesViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860;

*@
@{
    ViewData["Title"] = "File Changes";
}

<style>
    .table-main-div {
        max-width: 80vw;
        max-height: 80vh;
        overflow: auto;
    }

    .header-div {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .table-main-div {
        background: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
    }



    .detail-table {
        border-collapse: separate;
        border-spacing: 0;
    }

        .detail-table th {
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .detail-table td {
            vertical-align: middle;
        }

    .alert {
        font-size: 1.2rem;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .overlay-content {
        background: #ffffff;
        border-radius: 8px;
        padding: 20px;
        width: 80vw;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        overflow-y: auto;
        max-height: 90%;
    }

    .hidden {
        display: none;
    }

    #showChangesButton {
        display: block;
        margin: auto;
    }

    .overlay-btn {
    }
</style>


@if (Model.isDeleted)
{
    <div class="alert alert-danger text-center">
        This File is Deleted By<strong> @Model.DeletedBy</strong>
    </div>
}

<div id="changesOverlay" class="overlay hidden">
    <div class="overlay-content">
        <div class="overlay-btn d-flex flex-row-reverse">
            <button id="closeOverlayButton" class="btn btn-danger mb-2">Close</button>
        </div>
        <partial name="_ChangesTable.cshtml" />
    </div>
</div>


<div class="header-div mb-2">
    <h1>
        Changes
    </h1>
    <div class="d-flex justify-content-center align-items-center gap-1">
        @* <button id="showChangesButton" class="btn btn-primary">
            Show Changes
        </button> *@
        <a asp-action="AdminDashboard" asp-controller="Secure" class="btn btn-primary ">Admin Dashboard</a>
    </div>
</div>

<div class="table-main-div mt-4">
    @if (Model.ExcelData != null && Model.ExcelData.Count > 0)
    {
        <div class=" rounded ">
            <table class="detail-table table table-striped align-middle text-center">
                <thead class="table-dark">
                    <tr>
                        @foreach (var column in Model.ExcelData[0].Keys)
                        {
                            <th class="px-4 py-3 fw-bold border-end" style="min-width:9rem;">
                                @column
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in Model.ExcelData.Select((value, index) => new { RowData = value, RowIndex = index })) // Get row index (0-based)
                    {
                        <tr class="table-row">
                            @foreach (var cell in row.RowData.Values.Select((value, index) => new { CellValue = value, ColumnIndex = index })) // Get column index (0-based)
                            {
                                // Check if both row and column are present in Model.row and Model.column
                                bool isColChanged = Model.column.Contains(cell.ColumnIndex);  // 1-based row index
                                bool isRowChanged = Model.row.Contains(row.RowIndex);

                                int rIndex = @row.RowIndex;
                                rIndex++;
                                int cIndex = @cell.ColumnIndex;
                                cIndex++;

                                if (isRowChanged)
                                {
                                    if (isColChanged)
                                    {
                                        var dataFromDb = Model.ExcelChangesData
                                        .Where(a => a.Row == @row.RowIndex && a.Column == cell.ColumnIndex)
                                        .OrderByDescending(u => u.ChangeDate)
                                        .FirstOrDefault();
                                        if (dataFromDb != null)
                                        {
                                            <td class="px-4 py-3 fw-bold text-dark bg-warning bg-opacity-25 border-end border-dark"
                                                style="cursor:pointer;"
                                                data-bs-toggle="tooltip"
                                                data-bs-html="true"
                                                title="<strong>Old Value:</strong> @dataFromDb.OldValue">
                                                @cell.CellValue
                                            </td>
                                            Model.row.Remove(row.RowIndex);
                                            Model.column.Remove(cell.ColumnIndex);
                                        }
                                        else
                                        {
                                            <td class="px-4 py-3 border-end">@cell.CellValue</td>
                                        }
                                    }
                                    else
                                    {
                                        <td class="px-4 py-3 border-end">@cell.CellValue</td>
                                    }
                                }
                                else
                                {
                                    <td class="px-4 py-3 border-end">@cell.CellValue</td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center p-4 shadow">
            <i class="bi bi-info-circle"></i> No data available
        </div>
    }
</div>


<script>
        document.addEventListener("DOMContentLoaded", function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
            new bootstrap.Tooltip(tooltipTriggerEl, {
                html: true
            });
        });
    });
    document.getElementById("showChangesButton").addEventListener("click", function () {
        document.getElementById("changesOverlay").classList.remove("hidden");
    });

    document.getElementById("closeOverlayButton").addEventListener("click", function () {
        document.getElementById("changesOverlay").classList.add("hidden");
    });

</script>